# **Code**

This is the `Code` that I used to do this analysis, this will be showing the code for the `Rocket League` topic, each topic's code was the same, but with small differences. To see all the code and files, check out my `GitHub Repository` [here](https://github.com/bradfordjohnson/twitter-analysis-project).

## **Data Collection and Database Storage `R`**

``` r
# load packages
library(tidyverse)
library(rtweet)
library(DBI)
library(RPostgres)
library(dplyr)
auth_setup_default()
auth_has_default()
df <- search_tweets("rocket league", n = 1000, include_rts = FALSE, lang = "en")
# data
df1 <- df %>%
  select(id_str, retweet_count, favorite_count,  created_at)
# text
df2 <- df %>%
  select(id_str, full_text, display_text_range, text)
# connect to database
con <- dbConnect(RPostgres::Postgres(),dbname = 'postgres',
      host = 'localhost',
      port = 5432,
      user = 'postgres',
      password = 'vannah')
# create tables in database
dbWriteTable(con, "rocketleague_data", df1, append = TRUE)
dbWriteTable(con, "rocketleague_text", df2, append = TRUE)
# disconnect from database
dbDisconnect(con)
```

## **Connect to Database for Analysis `R` + `SQL`**

``` r
# load packages
library(DBI) # to connect to database
library(RPostgres) # to connect to database
library(dplyr) # to wrangle data
library(tidytext) # wrangle text data
library(tidyverse) # meta tidyverse package
library(RColorBrewer) # for color brewing
library(widyr) # for pairwise correlation 
library(igraph) # for data visualization
library(ggraph) # for data visualization

# connect to database
con <- dbConnect(RPostgres::Postgres(),dbname = 'postgres',
                 host = 'localhost',
                 port = 5432,
                 user = 'postgres',
                 password = 'vannah') 

# make and execute query
res <- dbSendQuery(con, "
SELECT DISTINCT(t.id_str), text, display_text_range, retweet_count, favorite_count
FROM rocketleague_text AS t
INNER JOIN rocketleague_data AS d
ON d.id_str = t.id_str
-- DISTINCT(t.id_str) eliminates duplicates 
                   
                   ")

query_df <- dbFetch(res)

# clear query and disconnect from database
dbClearResult(res)
dbDisconnect(con)
```

## **Clean Data `R`**

``` r
# clean data
db_new <- unnest_tokens(tbl = query_df, input = text, output = word)

stp_wrds <- get_stopwords(source = "smart")

db_new <- anti_join(db_new, stp_wrds, by = "word")

bing <- get_sentiments(lexicon = "bing")

db_bing <- inner_join(db_new, bing, by = "word")

db_bing <- count(db_bing, id_str, display_text_range, retweet_count, favorite_count, word, sentiment)

db_bing <- spread(key = sentiment, value = n, fill = 0, data = db_bing)


db_bing <- mutate(sentiment = positive - negative, .data = db_bing)

mean(db_bing$sentiment, na.rm = TRUE)
```

## **Sentiment Analysis `R`**

``` r
fun_color_range <- colorRampPalette(c("red", "green"))
my_colors2 <- fun_color_range(2)

db_sentiment <- db_bing %>% 
  mutate(value = case_when(sentiment > 0 ~ 'positive',
                           sentiment == 0 ~ 'neutral',
                           sentiment < 0 ~ 'negative')) %>%
  filter(value == 'positive' | value == 'negative')

rl_sentiment <- db_sentiment %>%
  group_by(id_str) %>%
  summarise( display_text_range = mean(display_text_range), Sentiment = sum(sentiment)) %>% 
  filter(display_text_range < 280) %>%
  ggplot(mapping = aes(x = display_text_range, y = Sentiment, color = Sentiment)) +
  geom_jitter(alpha = .7) + 
  scale_colour_gradientn(colors = my_colors2) +
  geom_hline(linetype = 1, yintercept = 0, size = .5) +
  geom_vline(linetype = 3, xintercept = 140, size = .5) +
  theme_classic() +
  theme(legend.position = "") + 
  labs(title = "Rocket League Tweets", x = "Number of Characters", y = "Sentiment")
```

## **Correlation Analysis `R`**

``` r
tweet_words <- query_df %>% 
  unnest_tokens(output = word, input = text) %>% 
  anti_join(stop_words, by = "word") %>% 
  filter(str_detect(word, "[:alpha:]")) %>% 
  distinct()

#---- remove non-words ----#
word <- c('https','t.co', 'ttv', 'bcluhhk8eu')
extra2 <- data.frame(word)

tweet_words <- tweet_words %>%
  anti_join(extra2, by = "word")

#---- first visual ----#
tweets_that_mention_word <- tweet_words %>% 
  count(word, name = "number_of_tweets") %>% 
  filter(number_of_tweets >= 9)


tweet_correlations <- tweet_words %>% 
  semi_join(tweets_that_mention_word, by = "word") %>% 
  pairwise_cor(item = word, feature = id_str) %>% 
  filter(correlation >= 0.76) 


rl_correlations <- graph_from_data_frame(d = tweet_correlations,
                                         vertices = tweets_that_mention_word %>%
                                           semi_join(tweet_correlations, by = c("word" = "item1"))) %>%
  ggraph(layout = "fr") +
  geom_edge_link(aes(alpha = correlation)) + 
  geom_node_point() +
  geom_node_text(aes(color = number_of_tweets, label = name), repel = TRUE, check_overlap = TRUE, size = 4) + 
  labs(title = "Rocket League Tweets") +
  scale_colour_gradientn(colours=c("#3e3b92", "#f44369")) +
  theme(panel.background = element_rect(fill = "#eaeaea"),
        plot.background = element_rect(fill = "#ffffff"))
```
